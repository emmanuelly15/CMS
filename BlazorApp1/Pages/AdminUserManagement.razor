@page "/AdminUserManagement"
@using BlazorApp1.Data
@using CommonModels.Model
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
@inject AdminUserService AdminUserService

<h1>Admin User Management</h1>
<h2>Add Admin User</h2>

<div class="row">
        <div class="col-md-6">
                <div class="form-group">
                        <label for="Name">  Name *</label>
                        <input form="Name" class="form-control" @bind="@adminuser.Name" />
                    </div>
            </div>
        
        <div class="col-md-6">
                <div class="form-group">
                        <label for="Email"> Email *</label>
                        <input form="Email" class="form-control" @bind="@adminuser.Email" />
                    </div>
            </div>
                <div class="col-md-6">
                <div class="form-group">
                        <label for="Password"> Password *</label>
                        <input form="Password" class="form-control" @bind="@adminuser.Password" />
                    </div>
            </div>
</div>
<p>
    Is Authorised?
    <br />
    <label>
        <input type="radio" value="Yes" name="@adminuser.Authorize" checked="@(adminuser.Authorize == true)" @onclick="@(()=>adminuser.Authorize = true)" /> yes
    </label>
    <label>
        <input type="radio" value="No" name="@adminuser.Authorize" checked="@(adminuser.Authorize == false)" @onclick="@(()=>adminuser.Authorize = false)" /> no
    </label>

    <br />
    @adminuser.Authorize
</p>

<div class="row">
        <div class="col-md-4">
                <div class="form-group">
                        <input type="button" class="btn btn-primary" @onclick="@Save" value="Save" />
                        <input type="button" class="btn" @onclick="@Cancel" value="Cancel" />
                    </div>
            </div>
</div>
@code {
    [Parameter]
    public string Id{ get; set; }
    AdminUser adminuser = new AdminUser();
    /*protected async Task Login()
    {
        await AdminUserService.Login(int.Parse(Id));
        NavigationManager.NavigateTo("AdminUserList");
    }*/
    protected async Task Save()
    {
        await AdminUserService.SaveAsync(adminuser);
        NavigationManager.NavigateTo("AdminUserList");
    }
            void Cancel()
            {
                NavigationManager.NavigateTo("AdminUserList");
            }
}

