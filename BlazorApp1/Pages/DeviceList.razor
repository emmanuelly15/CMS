@page "/DeviceList"
@using BlazorApp1.Data
@using CommonModels.Model
@inject DeviceService DeviceService
@inject NavigationManager NavigationManager

<style>
    body {
        background-color: #F9F6EE;
    }
</style>

<h1 style="font-family: Arial, Helvetica, sans-serif; color:#4682B4;">Device Management</h1>

<p>Add, edit, or delete a device.</p>
<div>
     <RadzenButton Text="Add New Device" Click=@OnButtonClick  Icon="add_circle_outline" ButtonStyle="ButtonStyle.Secondary" />
    <br>
    <br>
    @if (devices != null)
    {
        <table style="color: #000000" class="table-bordered" BorderColor="Black">
            <thead>
                <tr style="height: 30px; background-color:#336699 ; color:#FFFFFF ;">
                    <th>IMEI</th>
                    <th>User</th>
                    <th>Group</th>
                    <th>Authorization</th>
                    <th>Edit</th>
                    <th>Delete</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var p in devices)
                {
                    <tr>
                        <td>@p.IMEI</td>
                        <td>@p.User</td>
                        <td>@p.Groups</td>
                        <td>@p.Authorisation</td>
                        <td>
                        <button class="btn btn-primary">
                                <span class="oi oi-pencil"></span>
                                <a style="color: #FFFFFF" href="/EditDevice/@p.Id">Edit</a>
                        </button></td> <td>
                        <button  class="btn btn-danger">
                                <span class="oi oi-trash"></span>
                                <a style="color: #FFFFFF" href="/DeleteDevice/@p.Id">Delete</a>
                        </button>
                    </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    private Device[] devices;

    protected override async Task OnInitializedAsync()
    {
        devices = await DeviceService.GetDevicesAsync();
    }
    void OnButtonClick()
    {
        NavigationManager.NavigateTo("DeviceManagement");
    }
}
