@page "/DocumentSubmission"
@using BlazorApp1.Data
@using CommonModels.Model
@using Microsoft.JSInterop
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
@inject DocumentService DocumentService

<h1>Document Submission</h1>
<h2>View documents and approve or reject the document</h2>

<h3>Document Submissions List</h3>
<div>
    @if (documents != null)
    {
        <table class="table-bordered">
            <thead>
                <tr>
                    <th width="30%">User</th>
                    <th width="20%">SentDateTime</th>
                    <th width="30%">FileFormat</th>
                    <th width="30%">Img</th>
                    <th width="20%">Description</th>
                    <th width="20%">Location</th>
                    <th width="20%">Status</th>
                    <th width="20%">Amount</th>
                    <th width="30%">Comment</th>

                </tr>
            </thead>
            <tbody>
                @foreach (var p in documents)
                {
                    <tr>
                        <td>@p.SentDateTime</td>
                        <td>@p.FileFormat</td>
                        <td>
                            @p.Img
                        </td>
                        <td>@p.Description</td>
                        <td>@p.Location</td>
                        <td>@p.Status</td>
                        <td>@p.Amount</td>
                        <td>@p.Comment</td>
                        <td>
                            <a href="/editdevice/@p.Id">Arrpove</a> |
                            <a href="/deletedevice/@p.Id">Reject</a>
                        </td>
                    </tr>
                }
            </tbody>
            
        </table>
    }
</div>


@code {
    //timestamp for image issue - 12:00...need to create @onclick for image 
    //proper setup to call img link timestamp - 18:16
    private Document[] documents;
    protected override async Task OnInitializedAsync()
    {
      documents = await DocumentService.GetDocumentsAsync();
    }

    /*[Parameter]
    public int Id { get; set; }
    
    
    private string apilink;
   
    protected async Task Save()
    {
        await DocumentService.SaveAsync(document);
    }*/

}
