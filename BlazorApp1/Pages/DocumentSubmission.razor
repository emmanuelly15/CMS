@page "/DocumentSubmission"
@using BlazorApp1.DbServices
@using CommonModels.Model
@inject DocumentService DocumentService

<h3>Document Submission</h3>
<p>View documents and approve or reject the document</p>
<p>Document Submissions List</p>
<div>
    @if (imageuploads != null)
    {
        <table class="table-bordered">
            <thead>
                <tr>
                    <th width="30%">Email</th>
                    <th width="20%">Title</th>
                    <th width="20%">InsertedOn</th>
                    <th width="30%">ImagePath</th>
                    <th width="30%">FileFormat</th>
                    <th width="20%">Comment</th>
                    <th width="20%">Location</th>
                    <th width="20%">Status</th>
                    <th width="20%">Amount</th>

                </tr>
            </thead>
            <tbody>
                @foreach (var p in imageuploads)
                {
                    <tr>
                        <td>@p.Email</td>
                        <td>@p.Title</td>
                        <td>@p.InsertedOn</td>
                        <td><a href="@p.ImagePath" target="_blank"> @p.ImagePath</a></td>
                        <td>@p.FileFormat</td>
                        <td>@p.Comment</td>
                        <td>@p.Location</td>
                        <td>@p.Status</td>
                        <td>@p.Amount</td>
                        <td>
                             
                        @if (@p.Status=="Pending")
                       {
                           <button @onclick="@(k => Approve(k,@p.Id))">Approve</button>
                           <button @onclick="@(k => Reject(k,@p.Id))">Reject</button>
                       }
                            
                        </td>
                    </tr>
                }
            </tbody>
            
        </table>
    }
</div>


@code {
    //timestamp for image issue - 12:00...need to create @onclick for image 
    //proper setup to call img link timestamp - 18:16
    private Imageupload[] imageuploads;
    protected override async Task OnInitializedAsync()
    {
        imageuploads = await DocumentService.GetDocumentsAsync();
    }

    protected async Task Approve(MouseEventArgs args, int Id)
    {
        await DocumentService.ApproveDocumentById(Id);
        Console.WriteLine(Id);
        // await DocumentService.SaveAsync(document);
    }
    protected async Task Reject(MouseEventArgs args, int Id)
    {
        await DocumentService.RejectDocumentById(Id);
        Console.WriteLine(Id);
        // await DocumentService.SaveAsync(document);
    }
    /*[Parameter]
    public int Id { get; set; }
    
    
    private string apilink;
   
    protected async Task Save()
    {
        await DocumentService.SaveAsync(document);
    }*/

}
