@page "/EditAdminUser/{Id}"
@layout NoMenuLayout
@using CommonModels.Model
@using BlazorApp1.Data
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
@inject AdminUserService AdminUserService

<EditForm Model="@adminuser" OnValidSubmit="@HandleValidSubmit">

    <DataAnnotationsValidator />

    <ValidationSummary />
<h2>Edit Admin User</h2>

<div class="row">
        <div class="col-md-6">
                <div class="form-group">
                        <label for="Name">  Name </label>
                        <p>Enter the name and surname of the administrator.</p>
                        <input form="Name" class="form-control" @bind="@adminuser.Name" />
                    </div>
            </div>
        
        <div class="col-md-6">
                <div class="form-group">
                        <label for="Email"> Email </label>
                        <p>Enter the email address of the administrator.</p>
                        <input form="Email" class="form-control" @bind="@adminuser.Email" />
                    </div>
            </div>
                <div class="col-md-6">
                <div class="form-group">
                        <label for="Password"> Password *</label>
                        <input form="Password" class="form-control" @bind="@adminuser.Password" />
                    </div>
            </div>
</div>  
<p>
    Is Authorised?
    <br />
    <label>
        <input type="radio" value="Yes" name="@adminuser.Authorize" checked="@(adminuser.Authorize == true)" @onclick="@(()=>adminuser.Authorize = true)" /> yes
    </label>
    <label>
        <input type="radio" value="No" name="@adminuser.Authorize" checked="@(adminuser.Authorize == false)" @onclick="@(()=>adminuser.Authorize = false)" /> no
    </label>

    <br />
    @adminuser.Authorize
</p>
<div class="row">
        <div class="col-md-4">
                <div class="form-group">
                        <button type="submit">Submit</button>
                        <input type="button" class="btn" @onclick="@Cancel" value="Cancel" />
                    </div>
            </div>
</div>
</EditForm>

@code {
    [Parameter]
    public string Id{ get; set; }
   AdminUser adminuser = new AdminUser();
    protected override async Task OnInitializedAsync()
    {
        adminuser = await AdminUserService.GetAdminUserById(int.Parse(Id));
    }
    private async void HandleValidSubmit() //handles user exception to ensure valid information is entered before saving

    {
        await AdminUserService.EditAdminUser(adminuser);
        NavigationManager.NavigateTo("AdminUserList");
        Console.WriteLine("OnValidSubmit");

    }
            void Cancel()
            {
                NavigationManager.NavigateTo("AdminUserList");
            }
        }