@page "/EditDevice/{Id}"
@using BlazorApp1.Models
@using CommonModels.Model
@using BlazorApp1.Services
@using BlazorApp1.Data
@inherits OwningComponentBase<GroupsListService>
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
@inject DeviceService DeviceService

<EditForm Model="@device" OnValidSubmit="@HandleValidSubmit">

    <DataAnnotationsValidator />

    <ValidationSummary />

 <h2>Edit Device</h2>

<div class="row">
    <div class="col-md-6">
        <div class="form-group">
            <label for="IMEI">  IMEI *</label>
            <input form="IMEI" class="form-control" @bind="@device.IMEI" />
        </div>
    </div>

    <div class="col-md-6">
        <div class="form-group">
            <label for="User"> User *</label>
            @*<input form="User" class="form-control" @bind="@device.User" />*@
            <select class="form-control" @bind="@device.User">
                <option value="">-- Select User --</option>
                @if (usrobj != null)
                {
                    @foreach (var item in usrobj)
                    {
                        <option value="@item.Email">@item.Email</option>

                    }
                }
            </select>


        </div>
    </div>

    <div class="col-md-6">
        <div class="form-group">
            <label for="Group"> Select Group *</label>
            @*<input form="Group" class="form-control" @bind="@device.Groups" />*@
            <select class="form-control" @bind="@device.Groups">
                <option value="">-- Select Group --</option>
                @if (grobj != null)
                    @foreach (var item in grobj)
                    {
                        <option value="@item.Groups">@item.Groups</option>

                    }
                }
            </select>
        </div>
    </div>
    <p>
        Is Authorised?
        <br />
        <label>
            <input type="radio" value="Yes" name="@device.Authorisation" checked="@(device.Authorisation == true)" @onclick="@(()=>device.Authorisation = true)" /> yes
        </label>
        <label>
            <input type="radio" value="No" name="@device.Authorisation" checked="@(device.Authorisation == false)" @onclick="@(()=>device.Authorisation = false)" /> no
        </label>

        <br />
        @device.Authorisation
    </p>

</div>      
<div class="row">
        <div class="col-md-4">
                <div class="form-group">
                        <button type="submit">Save</button>
                        <input type="button" class="btn" @onclick="@Cancel" value="Cancel" />
                    </div>
            </div>
</div>
</EditForm>

@code {
    public string Id{ get; set; }
    Device device = new Device();
    List<GroupsListClass> grobj;
    List<UserListClass> usrobj;
   
    protected override void OnInitialized()
    {
        //base.OnInitialized();
        grobj = Service.groupsobj();
        usrobj = Service.usersobj();
    }

    protected override async Task OnInitializedAsync()
    {
        device = await DeviceService.GetDevicesById(int.Parse(Id)); //getting users information from db to display in edit boxes.
    }
    
    /*protected override async Task OnInitializedAsync()
    {
        device = await DeviceService.GetDevicesById(int.Parse(Id));
        grobj = Service.groupsobj();
        usrobj = Service.usersobj();
    }*/

    private async void HandleValidSubmit() //handles user exception to ensure valid information is entered before saving

    {
        await DeviceService.EditDevice(device);
        NavigationManager.NavigateTo("DeviceList"); //navigation link to table page after device has been added
        Console.WriteLine("OnValidSubmit");

    }

    void Cancel()
    {
        NavigationManager.NavigateTo("DeviceList");
    }
 }