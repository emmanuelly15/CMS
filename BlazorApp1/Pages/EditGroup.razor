@page "/EditGroup/{Id}"
@layout NoMenuLayout
@using CommonModels.Model
@using BlazorApp1.Data
@using Services
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
@inject GroupService GroupService

<EditForm Model="@groups" OnValidSubmit="@HandleValidSubmit">

    <DataAnnotationsValidator />

    <ValidationSummary />
<h1 style="font-family: Arial, Helvetica, sans-serif; color:#4682B4;">Edit Group</h1>

<div class="row">
        <div class="col-md-6">
                <div class="form-group">
                        <label for="Group">Group *</label>
                        <input form="Group" class="form-control" @bind="@groups.Groups" aria-describedby="GroupHelpBlock"/>
                        <small id="GroupHelpBlock" class="form-text text-muted">
  Please start the group department with a Capital.
</small>
                    </div>
            
                    </div>
            
        </div>
        
        <button type="submit" class="btn btn-success">
                                <span class="oi oi-circle-check"></span>
                                <a style="color: #FFFFFF" >Submit</a>
                        </button>
                        <button type="button" class="btn btn-danger" @onclick="@Cancel" value="Cancel">
                                <span class="oi oi-circle-x"></span>
                                <a style="color: #FFFFFF" >Cancel</a>
                        </button>
</EditForm>

@code {
    [Parameter]
    public string Id{ get; set; }
    Group groups = new Group();
    protected override async Task OnInitializedAsync()
    {
        groups = await GroupService.GetGroupById(int.Parse(Id));
    }
    
    private async void HandleValidSubmit() //handles user exception to ensure valid information is entered before saving

    {
        await GroupService.EditGroup(groups);
        NavigationManager.NavigateTo("GroupList");
        Console.WriteLine("OnValidSubmit");

    }

   /* <input type="button" class="btn btn-primary" @onclick="@UpdateGroup" value="Save" />
    protected async Task UpdateGroup()
    {
        await GroupService.EditGroup(groups);
        NavigationManager.NavigateTo("GroupList");

    }*/
    void Cancel()
    {
        NavigationManager.NavigateTo("GroupList");
    }
    

}