@page "/EditGroup/{Id}"
@using CommonModels.Model
@using BlazorApp1.Data
@using Services
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
@inject GroupService GroupService

<style>
    body {
        background-color: #F9F6EE;
    }
</style>

<EditForm Model="@groups" OnValidSubmit="@HandleValidSubmit">

    <DataAnnotationsValidator />

    <ValidationSummary />
    <h2>Edit Group</h2>

<div class="row">
        <div class="col-md-4">
                <div class="form-group" style="width:15rem;">
                        <label for="Group">Group: </label>
                        <p>Enter a group.</p>
                        <input form="Group" class="form-control" @bind="@groups.Groups" />
                    </div>
            
                    </div>
            
        </div>
        
        <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                    <button class="btn btn-primary" type="submit">Save</button>
                    <input type="button" class="btn btn-outline-dark" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
</div>
</EditForm>

@code {
    [Parameter]
    public string Id{ get; set; }
    Group groups = new Group();
    protected override async Task OnInitializedAsync()
    {
        groups = await GroupService.GetGroupById(int.Parse(Id));
    }
    
    private async void HandleValidSubmit() //handles user exception to ensure valid information is entered before saving

    {
        await GroupService.EditGroup(groups);
        NavigationManager.NavigateTo("GroupList");
        Console.WriteLine("OnValidSubmit");

    }

   /* <input type="button" class="btn btn-primary" @onclick="@UpdateGroup" value="Save" />
    protected async Task UpdateGroup()
    {
        await GroupService.EditGroup(groups);
        NavigationManager.NavigateTo("GroupList");

    }*/
    void Cancel()
    {
        NavigationManager.NavigateTo("GroupList");
    }
    

}