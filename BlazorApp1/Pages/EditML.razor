@page "/EditML/{Id}"
@using CommonModels.Model
@using BlazorApp1.Data
@using BlazorApp1.Services
@using Microsoft.JSInterop
@using BlazorApp1.Models
@inherits OwningComponentBase<GroupsListService>
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
@inject MailingListService MailingListService

<style>
    body {
        background-color: #F9F6EE;
    }
</style>

<EditForm Model="@ml" OnValidSubmit="@HandleValidSubmit">

    <DataAnnotationsValidator />

    <ValidationSummary />

<h1 style="font-family: Arial, Helvetica, sans-serif; color:#4682B4;">Edit Mailing List</h1>

<div class="col-md-5">
            <div class="form-group">
        <label for="User"> User email:  </label>
        @*<input form="User" class="form-control" @bind="@device.User" />*@
        <label for="User">@ml.Email</label>
    </div>
</div>

<div class="col-md-4">
            <div class="form-group" style="width:11rem;">
        <label for="Groups">Edit Group: </label>
        @*<input form="Groups" class="form-control" @bind="@ml.Groups" />*@
        <select class="form-control" @bind="@ml.Groups">
            <option value="">-- Select Group --</option>
            @if (grobj != null)
                @foreach (var item in grobj)
                {
                    <option value="@item.Groups">@item.Groups</option>

                }
            }
        </select>
    </div>
</div>

<button type="submit" class="btn btn-success">
                                <span class="oi oi-circle-check"></span>
                                <a style="color: #FFFFFF" >Submit</a>
                        </button>
                        <button type="button" class="btn btn-danger" @onclick="@Cancel" value="Cancel">
                                <span class="oi oi-circle-x"></span>
                                <a style="color: #FFFFFF" >Cancel</a>
                        </button>
</EditForm>

@code {
    [Parameter]
    public string Id{ get; set; }
    MailingListC ml = new MailingListC();
    List<GroupsListClass> grobj;
    List<UserListClass> usrobj;

    protected override void OnInitialized()
    {
        //base.OnInitialized();
        grobj = Service.groupsobj();
        usrobj = Service.usersobj();
    }

    protected override async Task OnInitializedAsync()
    {
        ml = await MailingListService.GetMLById(int.Parse(Id));
    }

    private async void HandleValidSubmit() //handles user exception to ensure valid information is entered before saving

    {
        await MailingListService.EditMailingList(ml);
        NavigationManager.NavigateTo("MailingListList");
        Console.WriteLine("OnValidSubmit");

    }

   /* <input type="button" class="btn btn-primary" @onclick="@UpdateMailingList" value="Save" />
    protected async Task UpdateMailingList()
    {
        await MailingListService.EditMailingList(ml);
        NavigationManager.NavigateTo("MailingListList");         
    }*/
    
    void Cancel()
    {
                NavigationManager.NavigateTo("MailingListList");
    }
}