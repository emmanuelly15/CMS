@page "/EditUser/{Id}"
@using CommonModels.Model
@using BlazorApp1.Data
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
@inject UserService UserService 

<h1 style="font-family: Arial, Helvetica, sans-serif; color:#4682B4;">Edit User</h1>
@*Form to bring users information from the db and display it, so the user can decide what to edit.*@

<EditForm Model="@user" OnValidSubmit="@HandleValidSubmit">

    <DataAnnotationsValidator />

    <ValidationSummary />
<div class="row">
        <div class="col-md-6">
                <div class="form-group">
                        <label for="Name">  Name </label>
                        <input form="Name" class="form-control" @bind="@user.Name" aria-describedby="NameHelpBlock"/>
                        <small id="NameHelpBlock" class="form-text text-muted">
  Full name must begin with a capital letter.
</small> @*The bind function is what binds the user(from the user class, to the fields for example Name, Email...)*@ 
                 </div>
            </div>
        
        <div class="col-md-6">
                <div class="form-group">
                        <label for="Email"> Email </label>
                        <input form="Email" class="form-control" @bind="@user.Email" aria-describedby="EmailHelpBlock"/>
                        <small id="EmailHelpBlock" class="form-text text-muted">
  Email address must be valid. Eg: JohnSmith@gmail.com
</small>
                    </div>
            </div>
        <div class="col-md-6">
                <div class="form-group">
                        <label for="Telephone"> Telephone </label>
                        <input form="Telephone" class="form-control" @bind="@user.Telephone" aria-describedby="PhoneHelpBlock"/>
                        <small id="PhoneHelpBlock" class="form-text text-muted">
  Phone number cannot contain characters or symbols. Eg: 0123456789
</small>
                    </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                        <label for="EmpId"> Employee_ID </label>
                        <input form="EmpId" class="form-control" @bind="@user.EmpId" aria-describedby="IDHelpBlock"/>
                        <small id="IDHelpBlock" class="form-text text-muted">
  Employee ID must contain 8 numbers. Eg: 01234567
</small>
                    </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                        <label for="Password"> Password </label>
                        <input form="Password" class="form-control" @bind="@user.Password" aria-describedby="PasswordHelpBlock"/>
                        <small id="PasswordHelpBlock" class="form-text text-muted">
 Password must contain 8 Characters including: Upper case, lowercase, symbol and number.
</small>
                    </div>
            </div>
    </div>       
<button type="submit" class="btn btn-success">
                                <span class="oi oi-circle-check"></span>
                                <a style="color: #FFFFFF" >Submit</a>
                        </button>
                        <button type="button" class="btn btn-danger" @onclick="@Cancel" value="Cancel">
                                <span class="oi oi-circle-x"></span>
                                <a style="color: #FFFFFF" >Cancel</a>
                        </button>
</EditForm>

@code {
    [Parameter]
    public string Id{ get; set; }
    User user = new User();

    protected override async Task OnInitializedAsync()
    {
        user = await UserService.GetUserById(int.Parse(Id)); //getting users information from db to display in edit boxes.
    }

    private async void HandleValidSubmit() //handles user exception to ensure valid information is entered before saving

    {
        await UserService.EditUser(user);
        NavigationManager.NavigateTo("UserList");
        Console.WriteLine("OnValidSubmit");

    }

            void Cancel()
            {
                NavigationManager.NavigateTo("UserList");// taking user back to UserList if cancel button is pressed.
            }
       

        }