@page "/login"
@using BlazorApp1.Authentication
@using CommonModels.Model
@using BlazorApp1.Data
@using Microsoft.JSInterop
@using Microsoft.AspNetCore.Components.Forms
@inject IJSRuntime JsRuntime
@inject AdminUserService adminuser
@inject IAuthenticationService AuthService
@inject NavigationManager NavManager


<EditForm Model="adminuser" OnValidSubmit="ExecuteLogin">
    <DataAnnotationValidator />
    <ValidationSummary />

    <div>
        <br /><br /><br /><br /><br />
    </div>
    <div>
        <h3 style="font-weight:bold; color:purple">Payco Login</h3>
    </div>
    <div>
        <br />
    </div>
    <div class="col-12 row">
        <input class="form-control col-12" @bind="adminuser.Email" placeholder="email address" />
    </div>
    <br />
    <div class="col-12 row">
        <input type="password" class="form-control col-12" @bind="adminuser.Password" placeholder="password" />
    </div>
    <br />
    <div class="row">
        <span class="col-12"></span>
        <button type="submit" class="btn btn-success">Log in</button>
    </div>>

</EditForm>

@if (showAuthenticationError)
{
    <div class="alert alert-danger" role="alert">
        <p>@authenticationErrorText</p>
    </div>
}




@code {

    private AuthenticationAdminModel model = new AuthenticationAdminModel();

    private bool showAuthenticationError = false;
    private string authenticationErrorText = "";

    private async Task ExecuteLogin()
    {
        showAuthenticationError = false;

        AuthenticatedAdminModel result = await AuthService.Login(model);

        if(result != null)
        {
            NavManager.NavigateTo("/");
        }
        else
        {
            authenticationErrorText = "There was an error when trying to log in.";
            showAuthenticationError = true;
        }
    }


    
}
