@page "/"
@layout LoginLayout
@inherits NoMenuLayout
@using Api.Model.Database
@using BlazorApp1.Authentication
@using CommonModels.Model
@using Microsoft.JSInterop
@using BlazorApp1.Data
@using System.Net
@inject HttpClient httpClient
@inject IJSRuntime js
@inject NavigationManager navManager
@inject AuthenticationStateProvider authStateProvider

<style>
    body
    {
        background-color: #3A0647;
    }
</style>

@if (ShowErrors)
{
    <div class="alert alert-danger" role="alert">
        <p>@Error</p>
    </div>
}

<div class="row">
    <div class="col-lg-4 offset-lg-4 pt-4 pb-4" color="#3A0647">
        <div class="mb-3 text-center">
            <RadzenImage Path="Images\MicrosoftTeams-image-removebg-preview.png" Style="width: 60%; margin: 3rem;" />
           
        </div>
        <EditForm Model="@adminuser">
            <DataAnnotationsValidator />
            <ValidationSummary />
        <div class="mb-3">
            <label style="color: white" > Enter User Name</label>
            <InputText @bind-Value="adminuser.Email" class="form-control" placeholder="User Name" />
            <ValidationMessage For="@(() => adminuser.Email)" />
        </div>
        <div class="mb-3">
            <label style="color: white">Enter Password</label>
            <InputText @bind-Value="adminuser.Password" type="password" class="form-control" placeholder="Password" />
            <ValidationMessage For="@(() => adminuser.Password)" />
        </div>
         <div class="mb-3 text-center">
            <button type="submit" @onclick="Submit" class="btn btn-primary" background-color="#FF1493">Login</button>
            
       </div>
        </EditForm>
    </div>
</div>

@code {


    public DbAdminUser adminuser = new DbAdminUser();
    protected string Email { get; set; }
    protected string Password {get;set;}

    private bool ShowErrors;

    private string Error = "";

    string text = "Welcome";

    private void Submit()
    {
        if (adminuser.Email == "gngengineering@gmail.com" && adminuser.Password == "Gilbert1!")
        {
            navManager.NavigateTo("/Admin");

        }
        else
        {
            Error = "Username or password is incorrect! Try Again";
        }
        if(adminuser.Email == "Jabulani53@gmail.com" && adminuser.Password == "Jabulani10!")
        {
            navManager.NavigateTo("/lowerAdmin");
        }
        else
        {
            Error = "Username or password is incorrect! Try Again";
        }

        if (adminuser.Email == "Terresa@yahoo.com" && adminuser.Password == "Terressa7889")
        {
            navManager.NavigateTo("/lowerAdmin1");
        }
        else
        {
            Error = "Username or password is incorrect! Try Again";
        }

        if (adminuser.Email == "TebogoK67@gmail.com" && adminuser.Password == "Tebogo11!")
        {
            navManager.NavigateTo("/lowerAdmin2");
        }
        else
        {
            Error = "Username or password is incorrect! Try Again";
        }
        if (adminuser.Email == "MichaelJ@gngengineering.com" && adminuser.Password == "Michael007")
        {
            navManager.NavigateTo("/lowerAdmin3");
        }
        else
        {
            Error = "Username or password is incorrect! Try Again";
        }
        if (adminuser.Email == "SusanBoyl@gmail.com" && adminuser.Password == "Susab@290!")
        {
            navManager.NavigateTo("/lowerAdmin4");
        }
        else
        {
            Error = "Username or password is incorrect! Try Again";
        }



    }
   

    /*private LoginRequest loginRequest = new LoginRequest();

    private async Task Authenticate()
    {
        var loginResponse = await httpClient.PostAsJsonAsync<LoginRequest>("/api/Account/Login", loginRequest);

        if (loginResponse.IsSuccessStatusCode)
        {
            var adminSession = await loginResponse.Content.ReadAsAsync<AdminSession>();
            var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState(adminSession);
            navManager.NavigateTo("/", true);
        }
        else if (loginResponse.StatusCode == HttpStatusCode.Unauthorized)
        {
            await js.InvokeVoidAsync("alert", "Invalid User Name or Password");
            return;
        }
    }
    */
}