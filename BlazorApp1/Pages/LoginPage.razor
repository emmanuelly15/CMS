@page "/login"
@layout LoginLayout
@inherits NoMenuLayout
@using Api.Model.Database
@using BlazorApp1.Authentication
@using CommonModels.Model
@using Microsoft.JSInterop
@using BlazorApp1.Data
@using System.Net
@inject HttpClient httpClient
@inject IJSRuntime js
@inject NavigationManager navManager
@inject AuthenticationStateProvider authStateProvider

<style>
    body
    {
        background-color: #3A0647;
    }
</style>

@if (ShowErrors)
{
    <div class="alert alert-danger" role="alert">
        <p>@Error</p>
    </div>
}

<div class="row">
    <div class="col-lg-4 offset-lg-4 pt-4 pb-4 border">
        <div class="mb-3 text-center">
            <h1 style= "color: white" >PAYCO LOGIN</h1>
            <img src ="~/Image_225.jpg"/>
        </div>
        <EditForm Model="adminuser">
            <DataAnnotationsValidator />
            <ValidationSummary />
        <div class="mb-3">
            <label >User Name</label>
            <InputText @bind-Value="adminuser.Email" class="form-control" placeholder="User Name" />
            <ValidationMessage For="@(() => adminuserInput.Email)" />
        </div>
        <div class="mb-3">
            <label>Password</label>
            <InputText @bind-Value="adminuser.Password" type="password" class="form-control" placeholder="Password" />
            <ValidationMessage For="@(() => adminuserInput.Password)" />
        </div>
        
            <button type="submit" @onclick="Submit" class="btn btn-primary" background-color=pink>Login</button>
       
        </EditForm>
    </div>
</div>

@code {

    public AdminUser adminuserInput = new AdminUser();
    public DbAdminUser adminuser = new DbAdminUser();

    private bool ShowErrors;

    private string Error = "";

    string text = "Welcome";

    private void Submit()
    {
        if (adminuser.Email == adminuser.Email && adminuser.Password == adminuser.Password)
        {
            navManager.NavigateTo("/Dashboard");
            
        }
        else
        {
            ShowErrors = true;
        }
    }
   

    /*private LoginRequest loginRequest = new LoginRequest();

    private async Task Authenticate()
    {
        var loginResponse = await httpClient.PostAsJsonAsync<LoginRequest>("/api/Account/Login", loginRequest);

        if (loginResponse.IsSuccessStatusCode)
        {
            var adminSession = await loginResponse.Content.ReadAsAsync<AdminSession>();
            var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState(adminSession);
            navManager.NavigateTo("/", true);
        }
        else if (loginResponse.StatusCode == HttpStatusCode.Unauthorized)
        {
            await js.InvokeVoidAsync("alert", "Invalid User Name or Password");
            return;
        }
    }
    */
}